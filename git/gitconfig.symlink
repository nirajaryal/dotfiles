# Local/private config goes in the include
[include]
    path = ~/.gitconfig.local
[hub]
    protocol = https
[url "https://"]
    insteadOf = git://
[alias]
    promote = !$ZSH/bin/git-promote
    wtf     = !$ZSH/bin/git-wtf
    rank-contributors = !$ZSH/bin/git-rank-contributors
    count   = !git shortlog -sn

    a = add
    b = branch
    c = commit
    cl = clone
    co = !"find_and_checkout_branch(){\
        for last; do true; done ; \
        pattern='^/.*/$' ;\
        if [[ $# -eq 1 && $last =~ $pattern ]] ;\
        then \
          branch_pattern=`echo $last | sed -e 's/^\\///' -e 's/\\/$//'` ;\
          branch=`git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | grep -E -i $branch_pattern | head -n1` ;\
          if [[ $branch ]] ; then \
            git checkout $branch ;\
          else \
            echo "No branch found matching $last" ; \
            exit 1 ; \
          fi \
        else \
          git checkout $@ ;\
        fi \
      } ; find_and_checkout_branch"

    d = diff
    dt = difftool
    fd = "!fd() { for mybranch in $(git branch-name); do echo \"git checkout develop && git fetch && git reset --hard origin/develop && git checkout $mybranch\" && echo \" \" && git checkout develop && git fetch && git reset --hard origin/develop && git checkout $mybranch; done; }; fd"
    # the following wouldn't work?
    # "for mybranch in $(git branch-name); do git checkout develop & git pull & git checkout $mybranch & done"
    fp = "!echo \"git push -u origin $(git branch-name)\" && echo \" \" && git push -u origin $(git branch-name)"
    fr = "!echo \"git fetch && git reset --hard origin/$(git branch-name)\" && echo \" \" && git fetch && git reset --hard origin/$(git branch-name)"
    frb = "!echo \"git fetch && git rebase\" && echo \" \" && git fetch && git rebase"
    l = log
    mt = mergetool
    p = pull
    qa = "!echo \"git push origin $(git branch-name):qa --force\" && echo \" \" && git push origin $(git branch-name):qa --force"
    r = reset
    ra = "!echo \"git reset -q && git add . && git status\" && echo \" \" && git reset -q && git add . && git status"
    rb = rebase
    s = status
    st = stash
    upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD` `git symbolic-ref --short HEAD`

[color]
    ui = always
#    diff = auto
#    status = auto
#    branch = auto
[color "diff"]
    meta = yellow bold
    commit = green bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = "red bold 52"
    newNormal = "green bold"
    newHighlight = "green bold 22"
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
    editor = nvim
[apply]
    whitespace = nowarn
[merge]
    tool = sublimerge
[mergetool "sublimerge"]
    cmd = subl -n --wait \"$REMOTE\" \"$BASE\" \"$LOCAL\" \"$MERGED\" --command \"sublimerge_diff_views\"
    trustExitCode = false
#[diff]
#    tool = sublimerge
#[difftool "sublimerge"]
#    cmd = subl -n --wait \"$REMOTE\" \"$LOCAL\" --command \"sublimerge_diff_views {\\\"left_read_only\\\": true, \\\"right_read_only\\\": true}\"
[diff]
    tool = vscode-difftool
[difftool "vscode-difftool"]
    cmd = code --wait --diff $LOCAL $REMOTE
[help]
    autocorrect = 1
[push]
    default = current
    followTags = true
[rebase]
    autosquash = true
[rerere]
    enabled = true
[stash]
    showPatch = true
[include]
    path = .dotfiles/git/gitaliases
[user]
    name = Niraj Aryal
    email = niraj.aryal@foxsports.com.au
#[commit]
#    template = /Users/ming.teo/.stCommitMsg
